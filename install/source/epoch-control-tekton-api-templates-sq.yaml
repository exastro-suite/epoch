#   Copyright 2019 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
apiVersion: v1
data:
  sonarqube.yaml: |
    #   Copyright 2019 NEC Corporation
    #
    #   Licensed under the Apache License, Version 2.0 (the "License");
    #   you may not use this file except in compliance with the License.
    #   You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #   Unless required by applicable law or agreed to in writing, software
    #   distributed under the License is distributed on an "AS IS" BASIS,
    #   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #   See the License for the specific language governing permissions and
    #   limitations under the License.
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: sonarqube
      labels:
        app: sonarqube
      namespace: {{ param.ci_config.pipeline_namespace }}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: sonarqube
      template:
        metadata:
          labels:
            app: sonarqube
        spec:
          hostname: sonarqube
          volumes:
          - name: sonar-volume
            persistentVolumeClaim:
              claimName: pipeline-sonarqube-pvc
          # initContainers:
          # - name: sonarqube-init
          #   image: busybox
          #   command: ['sh', '-c']
          #   args:
          #      - |
          #         COUNT=$(sysctl -n vm.max_map_count);
          #         if [ ${COUNT} -lt ${MIN_VM_MAX_MAP_COUNT} ]; then
          #             sysctl -w vm.max_map_count=${MIN_VM_MAX_MAP_COUNT};
          #         fi
          #   env:
          #   - name: MIN_VM_MAX_MAP_COUNT
          #     value: "262144"
          #   securityContext:
          #     privileged: true
          containers:
          - name: sonarqube
            image: sonarqube
            env:
            - name: SONAR_JDBC_URL
              value: jdbc:postgresql://sonarqube-db:5432/sonar
            - name: SONAR_JDBC_USERNAME
              value: sonar
            - name: SONAR_JDBC_PASSWORD
              value: password
            volumeMounts:
            - name: sonar-volume
              subPath: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonar-volume
              subPath: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonar-volume
              subPath: sonarqube-logs
              mountPath: /opt/sonarqube/logs

    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: sonarqube
      labels:
        app: sonarqube
      namespace: {{ param.ci_config.pipeline_namespace }}
    spec:
      type: ClusterIP
      selector:
        app: sonarqube
      ports:
      - name: http
        port: 9000
        targetPort: 9000

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: sonarqube-db
      labels:
        app: sonarqube-db
      namespace: {{ param.ci_config.pipeline_namespace }}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: sonarqube-db
      template:
        metadata:
          labels:
            app: sonarqube-db
        spec:
          hostname: sonarqube-db
          volumes:
          - name: sonar-db-volume
            persistentVolumeClaim:
              claimName: pipeline-sonarqube-db-pvc
          containers:
          - name: sonarqube-db
            image: postgres:12
            env:
            - name: POSTGRES_USER
              value: sonar
            - name: POSTGRES_PASSWORD
              value: password
            volumeMounts:
            - name: sonar-db-volume
              subPath: postgresql
              mountPath: /var/lib/postgresql
            - name: sonar-db-volume
              subPath: postgresql-data
              mountPath: /var/lib/postgresql/data

    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: sonarqube-db
      labels:
        app: sonarqube-db
      namespace: {{ param.ci_config.pipeline_namespace }}
    spec:
      type: ClusterIP
      selector:
        app: sonarqube-db
      ports:
      - name: postgres
        port: 5432
        targetPort: 5432
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: epoch-control-tekton-api-templates-sq
  namespace: epoch-system
