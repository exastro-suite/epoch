#   Copyright 2019 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#{% for item in param.ci_config.pipelines %}---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-template-build-and-push-{{ loop.index }}
  namespace: {{ param.ci_config.pipeline_namespace }}
spec:
  params:
  - name: workspace_id
  - name: pipeline_id
  - name: git_repositry_interface
  - name: build_context_path
  - name: build_dockerfile_path
  - name: container_registry_image
  - name: git_repository_url
  - name: git_clone_revision
  - name: git_branch
  - name: git_sender_user
  - name: git_webhook_header
  - name: git_webhook_body
  - name: max_execute_build_task
  - name: rs_ci_result_api_base
  - name: pipeline_run_name
  - name: pipeline_run_uid
  - name: pipeline_sa
  - name: pipeline_sa_reg_secret
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: pipeline-run-{{ loop.index }}-
      labels:
        workspace_id: $(tt.params.workspace_id)
        pipeline_id: $(tt.params.pipeline_id)
    spec:
      pipelineRef:
        name: pipeline-build-and-push-{{ loop.index }}
      params:
      - name: workspace_id
        value: $(tt.params.workspace_id)
      - name: pipeline_id
        value: $(tt.params.pipeline_id)
      - name: git_repositry_interface
        value: $(tt.params.git_repositry_interface)
      - name: build_context_path
        value: $(tt.params.build_context_path)
      - name: build_dockerfile_path
        value: $(tt.params.build_dockerfile_path)
      - name: container_registry_image
        value: $(tt.params.container_registry_image)
      - name: git_repository_url
        value: $(tt.params.git_repository_url)
      - name: git_clone_revision
        value: $(tt.params.git_clone_revision)
      - name: git_branch
        value: $(tt.params.git_branch)
      - name: git_sender_user
        value: $(tt.params.git_sender_user)
      - name: git_webhook_header
        value: $(tt.params.git_webhook_header)
      - name: git_webhook_body
        value: $(tt.params.git_webhook_body)
      - name: max_execute_build_task
        value: $(tt.params.max_execute_build_task)
      - name: pipeline_run_name
        value: $(tt.params.pipeline_run_name)
      - name: pipeline_run_uid
        value: $(tt.params.pipeline_run_uid)
      serviceAccountName: $(tt.params.pipeline_sa)
      workspaces:
        - name: git-source
          persistentVolumeClaim:
            claimName: pipeline-pvc
        #{% if item.static_analysis.interface == "sonarQube" %}
        - name: sonar-settings
          configmap:
            name: sonar-settings-config-{{ loop.index }}
        #{% endif %}
        - name: dockerconfig
          secret:
            secretName: $(tt.params.pipeline_sa_reg_secret)
{% endfor %}
